.container {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Fixed height to viewport height */
  max-width: 1200px; /* Increased max-width for better use of screen space */
  margin: 0 auto;
  padding: 0;
  position: relative;
  background: #222;
  border-left: 20px solid #111;
  border-right: 20px solid #111;
  background-image: repeating-linear-gradient(
      to right,
      transparent 0,
      transparent 10px,
      rgba(57, 255, 20, 0.1) 11px
    ),
    repeating-linear-gradient(
      to bottom,
      transparent 0,
      transparent 10px,
      rgba(57, 255, 20, 0.1) 11px
    );
  overflow: hidden; /* Prevent any scrolling */
}

/* Power-on animation */
.poweredOff {
  filter: brightness(0.1);
}

.poweredOn {
  filter: brightness(1);
  transition: filter 1s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.poweredOn::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(transparent, #39ff14);
  opacity: 0.05;
  animation: powerGlow 2s ease-out forwards;
  pointer-events: none;
  z-index: 10;
}

@keyframes powerGlow {
  0% {
    opacity: 0.3;
    height: 100%;
  }
  50% {
    opacity: 0.1;
  }
  100% {
    opacity: 0;
    height: 0;
  }
}

.cabinetTop {
  height: 20px;
  background: linear-gradient(to right, #333, #111, #333);
  border-bottom: 4px solid #000;
  box-shadow: 0 4px 0 rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden;
}

.cabinetTop::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 2px;
  background: rgba(255, 255, 255, 0.2);
}

.cabinetTop::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 10px;
  width: 15px;
  height: 5px;
  background: #c62828;
  border-radius: 50%;
  box-shadow: 0 0 5px #ff5252;
  animation: blink 2s infinite alternate;
  z-index: 2;
}

@keyframes blink {
  0%,
  80% {
    opacity: 1;
  }
  90% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.8;
  }
}

.arcadeScreen {
  flex: 1;
  background-color: var(--background);
  border: 8px solid #000;
  margin: 10px;
  padding: 10px;
  position: relative;
  overflow: auto; /* Allow scrolling within the game content if needed */
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.8), 0 0 15px var(--foreground);
  display: flex;
  flex-direction: column;
}

.arcadeScreen::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(57, 255, 20, 0.03),
    transparent
  );
  animation: scanEffect 8s linear infinite;
  pointer-events: none;
  z-index: 5;
}

@keyframes scanEffect {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

.header {
  display: flex;
  flex-direction: column;
  gap: 0.5rem; /* Reduced gap */
  margin-bottom: 1rem; /* Reduced margin */
}

.backButton {
  display: flex;
  align-items: center;
  padding: 0.4rem 0.8rem; /* Smaller padding */
  background-color: transparent;
  border: 1px solid var(--accent);
  border-radius: 0;
  cursor: pointer;
  font-size: 0.7rem;
  color: var(--foreground);
  transition: all 0.2s ease;
  margin-bottom: 0.5rem; /* Reduced margin */
  text-shadow: 2px 2px 0 #000;
  font-family: var(--font-arcade);
}

.backButton:hover {
  background-color: var(--accent);
  color: #000;
  text-shadow: none;
}

.titleContainer {
  border-bottom: 2px solid var(--accent);
  padding-bottom: 0.5rem; /* Reduced padding */
}

.titleArea {
  text-align: center;
  margin-bottom: 0.5rem; /* Reduced margin */
}

.title {
  font-size: 1.5rem; /* Slightly smaller font */
  margin: 0 0 0.3rem;
  color: var(--accent);
  text-shadow: 2px 2px 0 #000;
  text-transform: uppercase;
}

.description {
  font-size: 0.7rem; /* Slightly smaller font */
  margin: 0;
  color: var(--foreground);
  max-width: 600px;
  margin: 0 auto;
  text-shadow: 1px 1px 0 #000;
}

.gameContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden; /* Prevent scrolling within game content container */
}

.content {
  flex: 1;
  width: 100%;
  padding: 0.5rem; /* Reduced padding */
  background: rgba(0, 0, 0, 0.2);
  border: 2px solid #000;
  overflow: auto; /* Allow scrolling within specific game content if needed */
  display: flex; /* Added to help game content expand properly */
  flex-direction: column; /* Added to help game content expand properly */
}

.cabinetControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 60px; /* Reduced height */
  padding: 10px 50px;
  background: linear-gradient(to bottom, #333, #222);
  border-top: 4px solid #000;
}

.joystick {
  width: 40px;
  height: 40px;
  background: #000;
  border-radius: 50%;
  position: relative;
}

.joystick:after {
  content: "";
  position: absolute;
  width: 15px;
  height: 30px;
  background: #111;
  top: -20px;
  left: 12.5px;
  border-radius: 5px;
}

.buttons {
  display: flex;
  gap: 20px;
}

.arcadeButton {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: radial-gradient(circle at center, var(--accent) 60%, #000 65%);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  border: 2px solid #000;
}

.arcadeButton:nth-child(2) {
  background: radial-gradient(
    circle at center,
    var(--secondary-accent) 60%,
    #000 65%
  );
}

.footer {
  height: 30px; /* Fixed height */
  padding: 0.3rem; /* Reduced padding */
  text-align: center;
  color: var(--foreground);
  font-size: 0.6rem;
  background: #111;
  border-top: 2px solid #000;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (max-width: 768px) {
  .container {
    padding: 0;
    border-left: 10px solid #111;
    border-right: 10px solid #111;
  }

  .arcadeScreen {
    margin: 5px;
    padding: 5px;
  }

  .title {
    font-size: 1.2rem;
  }

  .description {
    font-size: 0.7rem;
  }

  .cabinetControls {
    height: 50px;
    padding: 5px 20px;
  }
}

/* Joystick wiggle animation */
.wiggle {
  animation: wiggle 15s ease-in-out infinite;
}

@keyframes wiggle {
  0%,
  100% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(-2deg);
  }
  20% {
    transform: rotate(2deg);
  }
  30% {
    transform: rotate(0deg);
  }
  70% {
    transform: rotate(0deg);
  }
  80% {
    transform: rotate(-2deg);
  }
  90% {
    transform: rotate(2deg);
  }
}

/* Button pulse animation */
.pulse {
  animation: buttonPulse 8s infinite alternate;
  animation-delay: var(--delay, 0s);
}

.buttons .arcadeButton:nth-child(1) {
  --delay: 0s;
}

.buttons .arcadeButton:nth-child(2) {
  --delay: 3s;
}

@keyframes buttonPulse {
  0%,
  100% {
    transform: scale(1);
  }
  95% {
    transform: scale(1);
  }
  97% {
    transform: scale(0.92);
  }
  99% {
    transform: scale(1);
  }
}
